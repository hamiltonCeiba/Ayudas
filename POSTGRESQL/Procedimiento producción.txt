-- FUNCTION: ipshorisoes.functioninduceddemandmulvec(integer[], text, numeric)

-- DROP FUNCTION ipshorisoes.functioninduceddemandmulvec(integer[], text, numeric);

CREATE OR REPLACE FUNCTION ipshorisoes.functioninduceddemandmulvec(
	id_module_question integer[],
	tablename text,
	id_person_historic numeric)
    RETURNS text
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE
idd text;
cont int := 1;
idReturn text;
begin
	loop
		RAISE NOTICE 'contador %',cont;
		RAISE NOTICE 'id_module %',id_module_question;
		RAISE NOTICE 'valor id_module %',id_module_question[cont];		
		RAISE NOTICE 'tabla %',tableName;
		RAISE NOTICE 'id_person_historic %',id_person_historic;

		EXECUTE 'select q_'||cast(id_module_question[cont] as character varying)||' from '|| tableName||
		' where id_person_historic = '||id_person_historic  into idd;
		RAISE NOTICE 'idd %',idd;
		 if (idd is null or idd in('','null') ) then 
			idd:=0;
			else idd:=idd;
		end if;
		
		SELECT descrip_domain_value 
		FROM ipshorisoes.ecr_domain_value 
		WHERE ID_DOMAIN_VALUE = idd::int into idReturn;
		idReturn := concat(idReturn,', ', idReturn);
		RAISE NOTICE 'result %',idReturn;
		cont :=cont+1;
	EXIT WHEN cont = array_length(id_module_question,1)+1;
   END LOOP;
	
	
	return idReturn;
end;
$BODY$;

ALTER FUNCTION ipshorisoes.functioninduceddemandmulvec(integer[], text, numeric)
    OWNER TO postgres;



--------------

CREATE OR REPLACE FUNCTION ipshorisoes.functioninduceddemandboolVec(
	id_module_question integer[],
	tablename text,
	id_person_historic numeric)
    RETURNS text
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE
idd text;
idPH int;
idReturn text;

begin
FOREACH idPH IN ARRAY id_module_question
LOOP
	RAISE NOTICE 'idVect %',idPH;
	RAISE NOTICE 'id_module %',id_module_question;
	RAISE NOTICE 'tabla %',tableName;
	RAISE NOTICE 'id_person_historic %',id_person_historic;
   
	EXECUTE 'select q_'||cast(idPH as character varying)||' from '|| tableName||
    ' where id_person_historic = '||id_person_historic  into idd;
	 if (idd is null) then 
	 	idd:=0;
		else idd:=idd;
	end if;
END LOOP;
	
	return idd;
end;
$BODY$;